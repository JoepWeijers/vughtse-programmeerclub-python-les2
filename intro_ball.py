import base64
import io
import sys, pygame
import importlib.resources
from tkinter import *

pygame.init()

width = 1550
height = 880
speed = [1, 1]
black = 0, 0, 0

ball_image_encoded = "R0lGODlhbwBvAOcCAPeEY/dzWv////e9pedzWv/v7/echN5jUudrWud7Y++Mc95zWv+ljMZaSu+9rc5jUv/379bOzufn58ZjSu+Ea8ZzY/eUe/e1nPfGtffWzv/n3ufv9+eUe9bGvcbn996cjK3e7+fe3nPG5+e9tYTO5ym15wCt3u+cjDm13s6Ec7VjUtbW1t7n597n3gilzt6tnBit3nPG3rVSQpzW587n7xilzta1pc7e51Ktzs7W1sbGxgCcxnu91pTO3jm1572Ee0q950q93imcvca9tb2UjL3O1sa1rbWtpc6tnKWlpUKlzsbGvb29vZTO55y1tTmUtc6UjL21rSGcxlq93rW9xq3O1pS9xlq952u1zue9lIzG1vfWrf/Ga/+1Qv+tSv+1Uv/OjPfGe++lUvetUu+1a++lSu+1c++9jOecSta1lN6USsa9nM6UQs6thMale86MSsaMOZylpcaca62lnJSUlL2UY72MWs6UUr2EOZyUhLV7Oa2Uc62ESpyEa6VzOZSMlISEhJRrQpxrOZSMe4yEe3uMlJR7a4xjOZx7Wmtzc4xzUnt7e3OEhKWEWu/OvWu93ufWxufGpd6lWoy1vd61e87Opc61hN6lY629va3Gzq2ljL2ce9acUt6te4R7e9bWzuetY5SMhLW1lP///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////yH5BAEKAP8ALAAAAABvAG8AAAj+AP8JHEiwoMGDCBMqXMiwocOHECNKnEixokWJAAJo3MhR48WPICsKEDCAQAACKFOqNJmRY8iXMAeOHFnAwIEDBBCs3IkyQQAABABoGBmzqMSZMwsouIkAwQKnCA405emTZQak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"
ball_image = io.BytesIO(base64.b64decode(ball_image_encoded))
ball = pygame.image.load(ball_image)
ballrect = ball.get_rect()

screen = pygame.display.set_mode((width, height))
pygame.display.set_mode((0, 0), pygame.FULLSCREEN)

running = True
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT: sys.exit()
        if event.type == pygame.KEYDOWN: running = False
    
    ballrect = ballrect.move(speed)
    if ballrect.left < 0 or ballrect.right > width:
        speed[0] = -speed[0]
    if ballrect.top < 0 or ballrect.bottom > height:
        speed[1] = -speed[1]

    screen.fill(black)
    screen.blit(ball, ballrect)
    pygame.display.flip()